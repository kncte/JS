def up_ck_with_req(response, url):
    try:
        headers = {
            "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "Accept-Language": "zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6",
            "Cache-Control": "max-age=0",
            "Connection": "keep-alive",
            "Referer": "http://www.cb.com.cn/",
            "Upgrade-Insecure-Requests": "1",
            "User-Agent": ua.random
        }
        if response.cookies:
            cookies.update(response.cookies)
        else:
            time.sleep(3)
            return ''
        content_first = re.findall('cookie=(.*?);location', response.text)[0]
        jsl_clearance_s = execjs.eval(content_first).split(';')[0]
        cookies['__jsl_clearance'] = jsl_clearance_s.split("=")[1]
        resp_second = requests.get(url, headers=headers, verify=False, cookies=cookies)
        go_params = re.findall(';go\((.*?)\)</script>', resp_second.text)[0]

        params = json.loads(go_params)

        # 传入字典
        third_cookie = execjs.compile(jsl_js).call('cookies', params)

        cookies.update(third_cookie)
    except Exception as e:
        print(str(e))


def update_cookie(headers):
    try:

        url = "http://www.cb.com.cn/"
        response = requests.get(url, headers=headers, verify=False)
        if not response.cookies:
            return ''
        cookies.update(response.cookies)
        content_first = re.findall('cookie=(.*?);location', response.text)[0]
        jsl_clearance_s = execjs.eval(content_first).split(';')[0]
        cookies['__jsl_clearance'] = jsl_clearance_s.split("=")[1]

        resp_second = requests.get(url, headers=headers, verify=False, cookies=cookies)
        if not resp_second.text:
            return ''
        go_params = re.findall(';go\((.*?)\)</script>', resp_second.text)[0]

        params = json.loads(go_params)

        # 传入字典
        third_cookie = execjs.compile(jsl_js).call('cookies', params)

        cookies.update(third_cookie)
    except Exception:
        time.sleep(3)
        return False
